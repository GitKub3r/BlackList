@import "./variables/color.css";
@import "./variables/size.css";
@import "./variables/fonts.css";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
  font-weight: 500;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}

body {
  background-color: var(--color-bg);
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: var(--color-link);
  font-weight: bold;
}

a.hover-link {
  position: relative;
}

a.hover-link::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: -2px;
  left: 0;
  background-color: var(--color-text-alt);
  visibility: hidden;
  transform: scaleX(0);
  transition: all 0.3s ease-in-out 0s;
}

a.hover-link:hover::after {
  visibility: visible;
  transform: scaleX(1);
}

img {
  object-fit: cover;
}

button {
  width: 100%;
  padding: var(--size-small);

  border: 1px solid var(--color-button);
  border-radius: var(--border-radius-default);

  background-color: var(--color-button);
  color: var(--color-text-alt);

  font-weight: bold;

  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,
    border-color 0.3s ease-in-out;
  cursor: pointer;
}

button:hover {
  background-color: var(--color-button-hover);
}

hr {
  border-color: var(--color-accent);
}

form {
  width: 40%;
  padding: var(--size-default);
  margin-bottom: 6.5%;

  background-color: var(--color-bg);
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);

  border-radius: var(--border-radius-medium);

  display: flex;
  flex-direction: column;
  align-items: center;

  gap: var(--size-default);
}

label {
  font-size: calc(var(--size-default) - 0.125rem);
  font-weight: 500;
}

label.error {
  color: var(--color-danger);
}

input {
  width: 100%;
  padding: var(--size-xsmall) var(--size-small);

  border: 1px solid var(--color-input-border);
  border-radius: var(--border-radius-default);
}

input:focus {
  outline: none;
  border-color: var(--color-input-border-focus);
}

input.error {
  border-color: var(--color-danger);
}

input.error::placeholder {
  color: var(--color-danger);
}

.fade-in {
  opacity: 0;
  animation: fadeIn 0.5s ease-in-out forwards;
}

.center-column {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
